name: Release

# Create a simple release and save .app as .dmg (also the .zip and .pkg) for macos in Github
# We don't do any release yet for ios (would be adhoc), instead the binary go straight to Testflight (appstore)
on: 
  workflow_dispatch:
    inputs:
      notes:
        type: string
        description: Release Notes

jobs:
  version: # Get current version
    uses: starburst997/yearly-version/.github/workflows/version.yml@v1
    secrets: inherit

  version_increment: # Increment only if release is successful
    uses: starburst997/yearly-version/.github/workflows/version.yml@v1
    needs: [release]
    secrets: inherit
    with:
      increment: true

  build-macos:
    uses: starburst997/apple-code-sign/.github/workflows/macos.yml@v1
    needs: [version]
    secrets: inherit
    with:
      project_path: macOS
      xcodeproj_path: Test.xcodeproj
      plist_path: Test/Info.plist
      project_target: Test
      version: ${{ needs.version.outputs.version }}
      artifact: true
      generate_appstore: true
      generate_developer_id: true
      generate_dmg: true

  build-ios:
    uses: starburst997/apple-code-sign/.github/workflows/ios.yml@v1
    needs: [version]
    secrets: inherit
    with:
      project_path: iOS
      xcodeproj_path: Test.xcodeproj
      plist_path: Test/Info.plist
      project_target: Test
      version: ${{ needs.version.outputs.version }}
      artifact: false

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [version, build-macos, build-ios]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
      
      - name: Tag release
        run: |
          git tag v${{ needs.version.outputs.version }}
          git push origin --tags

      - name: Generate Changelog
        if: ${{ inputs.notes != '' }}
        run: echo "${{ inputs.notes }}" > RELEASE.txt
        
      - name: Generate Changelog (empty)
        if: ${{ inputs.notes == '' }}
        run: echo "No notes" > RELEASE.txt

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-macos
          path: macos

      - name: Rename release
        working-directory: macos
        run: |
          mv developer-id.app.zip Test.app.zip
          mv developer-id.dmg Test.dmg

      - name: Release
        uses: starburst997/action-gh-release@v2
        with:
          body_path: RELEASE.txt
          token: ${{ secrets.GH_PAT }}
          tag_name: v${{ needs.version.outputs.version }}
          files: |
            macos/Test.app.zip
            macos/Test.dmg

      - name: Cleanup to avoid storage limit
        if: always()
        uses: starburst997/delete-artifact@v5
        with:
          name: build-macos